<!DOCTYPE html>
<html>
<head>
    <title>AI Image Chat</title>
    <style>
        /* ... existing chat styles ... */
        .image-message {
            max-width: 512px; /* Standard size for most AI generated images */
            margin: 10px 0;
        }

        .image-container {
            position: relative;
            display: inline-block;
            margin: 10px 0;
        }

        .download-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: rgba(0, 0, 0, 0.6);
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: background-color 0.3s;
        }

        .download-btn:hover {
            background-color: rgba(0, 0, 0, 0.8);
        }

        .download-icon {
            width: 16px;
            height: 16px;
            fill: currentColor;
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-messages" id="chat-messages">
            <!-- Messages will be inserted here -->
        </div>
        
        <div class="chat-input-container">
            <input type="text" id="user-input" placeholder="Describe the image you want to generate...">
            <button onclick="sendMessage()">Generate</button>
        </div>
    </div>

    <script>
        let messageHistory = [];

        async function sendMessage() {
            const input = document.getElementById('user-input');
            const prompt = input.value.trim();
            if (!prompt) return;

            // Add user message
            addMessage('user', prompt);
            input.value = '';

            // Show loading state
            addMessage('assistant', 'Generating image...');

            try {
                const response = await fetch('/image-chat/api/generate-image', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ prompt })
                });
                
                const data = await response.json();
                
                // Remove loading message and add image
                const messages = document.getElementById('chat-messages');
                messages.removeChild(messages.lastChild);
                
                if (data.error) {
                    // Display the error message in the chat
                    addMessage('assistant', data.error);
                } else {
                    // Display the generated image
                    addMessage('assistant', data.imageUrl, true);
                }
                
            } catch (error) {
                console.error('Error:', error);
                addMessage('assistant', 'Sorry, there was an error generating the image.');
            }
        }

        function addMessage(sender, content, isImage = false) {
            const messages = document.getElementById('chat-messages');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}-message`;

            if (isImage) {
                const imageContainer = document.createElement('div');
                imageContainer.className = 'image-container';

                const img = document.createElement('img');
                img.src = content;
                img.className = 'image-message';

                const downloadBtn = document.createElement('button');
                downloadBtn.className = 'download-btn';
                downloadBtn.innerHTML = `
                    <svg class="download-icon" viewBox="0 0 24 24">
                        <path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/>
                    </svg>
                    Download
                `;
                
                downloadBtn.onclick = async () => {
                    try {
                        // Use our proxy endpoint instead of fetching directly
                        const response = await fetch('/image-chat/api/download-image', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ imageUrl: content })
                        });
                        
                        if (!response.ok) {
                            throw new Error('Failed to download image');
                        }

                        const blob = await response.blob();
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `generated-image-${Date.now()}.png`;
                        document.body.appendChild(a);
                        a.click();
                        window.URL.revokeObjectURL(url);
                        document.body.removeChild(a);
                    } catch (error) {
                        console.error('Error downloading image:', error);
                        alert('Failed to download image');
                    }
                };

                imageContainer.appendChild(img);
                imageContainer.appendChild(downloadBtn);
                messageDiv.appendChild(imageContainer);
            } else {
                messageDiv.textContent = content;
            }

            messages.appendChild(messageDiv);
            messages.scrollTop = messages.scrollHeight;
            
            // Store in history
            messageHistory.push({ sender, content, isImage });
        }
    </script>
</body>
</html> 